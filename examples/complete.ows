<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Local Search" qualified_name="StrawberryPlus.metaheuristics.widgets.localsearch_.LocalSearch_widget" project_name="Strawberry-Plus" version="" title="Local Search" position="(586.0, 136.0)" />
		<node id="1" name="Simulated Annealing_SA" qualified_name="StrawberryPlus.metaheuristics.widgets.SA.SimulatedAnneling" project_name="Strawberry-Plus" version="" title="Simulated Annealing_SA" position="(589.0, 276.0)" />
		<node id="2" name="Input an integer Number" qualified_name="StrawberryPlus.utilities.widgets.integerInput.IntNumber" project_name="Strawberry-Plus" version="" title="Input an integer Number" position="(139.0, 271.0)" />
		<node id="3" name="Print (String)" qualified_name="StrawberryPlus.utilities.widgets.stringPrint.PrintResults" project_name="Strawberry-Plus" version="" title="Print (String)" position="(735.0, 137.0)" />
		<node id="4" name="Print (String)" qualified_name="StrawberryPlus.utilities.widgets.stringPrint.PrintResults" project_name="Strawberry-Plus" version="" title="Print (String) (1)" position="(736.0, 276.0)" />
		<node id="5" name="OneMax - Single-Objective - Problem" qualified_name="StrawberryPlus.problems.widgets.OneMax.OneMax_SingleObjetive" project_name="Strawberry-Plus" version="" title="OneMax - Single-Objective - Problem" position="(351.0, 279.0)" />
		<node id="6" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table" position="(198.0, 130.0)" />
		<node id="7" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="File" position="(81.0, 131.0)" />
		<node id="8" name="SubSet Single-Objective - Problem" qualified_name="StrawberryPlus.problems.widgets.SubSet_Single.SubSet_SingleObjetive" project_name="Strawberry-Plus" version="" title="SubSet Single-Objective - Problem" position="(353.0, 139.0)" />
		<node id="9" name="Input an integer Number" qualified_name="StrawberryPlus.utilities.widgets.integerInput.IntNumber" project_name="Strawberry-Plus" version="" title="Input an integer Number (1)" position="(142.0, 406.0)" />
		<node id="10" name="Custom Problem in Python - Single-Objective" qualified_name="StrawberryPlus.problems.widgets.custom_single.myCustom_Single" project_name="Strawberry-Plus" version="" title="Custom Problem in Python - Single-Objective" position="(355.0, 630.0)" />
		<node id="11" name="Sphere - Single-Objective - Problem" qualified_name="StrawberryPlus.problems.widgets.sphere.Sphere_SingleObjetive" project_name="Strawberry-Plus" version="" title="Sphere - Single-Objective - Problem" position="(346.0, 398.0)" />
		<node id="12" name="Rastrigin - Single-Objective - Problem" qualified_name="StrawberryPlus.problems.widgets.restrigin.Rastrigin_SingleObjetive" project_name="Strawberry-Plus" version="" title="Rastrigin - Single-Objective - Problem" position="(350.0, 519.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="3" source_channel="Solution" sink_channel="String" enabled="true" />
		<link id="1" source_node_id="1" sink_node_id="4" source_channel="Solution" sink_channel="String" enabled="true" />
		<link id="2" source_node_id="2" sink_node_id="5" source_channel="Number" sink_channel="number_of_bits" enabled="true" />
		<link id="3" source_node_id="7" sink_node_id="6" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="4" source_node_id="2" sink_node_id="8" source_channel="Number" sink_channel="Sum to find" enabled="true" />
		<link id="5" source_node_id="6" sink_node_id="8" source_channel="Selected Data" sink_channel="Data Table with the data" enabled="true" />
		<link id="6" source_node_id="9" sink_node_id="11" source_channel="Number" sink_channel="number_of_variables" enabled="true" />
		<link id="7" source_node_id="9" sink_node_id="12" source_channel="Number" sink_channel="number_of_variables" enabled="true" />
		<link id="8" source_node_id="12" sink_node_id="1" source_channel="Problem" sink_channel="Problem Unconstrained" enabled="true" />
		<link id="9" source_node_id="11" sink_node_id="0" source_channel="Problem" sink_channel="Problem Unconstrained (Single Objective)" enabled="true" />
	</links>
	<annotations>
		<text id="0" type="text/plain" rect="(142.0, 12.0, 610.0, 72.0)" font-family="Ubuntu" font-size="16">Complete Schema of the different Algorithms and problem supported
in the first version of Strawberry-Plus</text>
	</annotations>
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'controlAreaVisible': True, 'max_evaluations': 100, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02|\x00\x00\x01Z\x00\x00\x03\x84\x00\x00\x02e\x00\x00\x02|\x00\x00\x01v\x00\x00\x03\x84\x00\x00\x02e\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x02|\x00\x00\x01v\x00\x00\x03\x84\x00\x00\x02e', '__version__': 1}</properties>
		<properties node_id="1" format="literal">{'controlAreaVisible': True, 'max_evaluations': 100, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc4\x00\x00\x02j\x00\x00\x04\xcc\x00\x00\x03u\x00\x00\x03\xc4\x00\x00\x02\x86\x00\x00\x04\xcc\x00\x00\x03u\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x03\xc4\x00\x00\x02\x86\x00\x00\x04\xcc\x00\x00\x03u', '__version__': 1}</properties>
		<properties node_id="2" format="literal">{'controlAreaVisible': True, 'number': 20, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02 \x00\x00\x02\xd2\x00\x00\x02\xe7\x00\x00\x03\x83\x00\x00\x02 \x00\x00\x02\xee\x00\x00\x02\xe7\x00\x00\x03\x83\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x02 \x00\x00\x02\xee\x00\x00\x02\xe7\x00\x00\x03\x83', '__version__': 1}</properties>
		<properties node_id="3" format="literal">{'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x04H\x00\x00\x01\xeb\x00\x00\x06\x90\x00\x00\x02\xc7\x00\x00\x04H\x00\x00\x02\x07\x00\x00\x06\x90\x00\x00\x02\xc7\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x04H\x00\x00\x02\x07\x00\x00\x06\x90\x00\x00\x02\xc7', '__version__': 1}</properties>
		<properties node_id="4" format="literal">{'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x04\x0b\x00\x00\x01\xd8\x00\x00\x06!\x00\x00\x02\xa6\x00\x00\x04\x0b\x00\x00\x01\xf4\x00\x00\x06!\x00\x00\x02\xa6\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x04\x0b\x00\x00\x01\xf4\x00\x00\x06!\x00\x00\x02\xa6', '__version__': 1}</properties>
		<properties node_id="5" format="literal">{'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02&gt;\x00\x00\x01i\x00\x00\x02\xf5\x00\x00\x02\x1a\x00\x00\x02&gt;\x00\x00\x01\x85\x00\x00\x02\xf5\x00\x00\x02\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x02&gt;\x00\x00\x01\x85\x00\x00\x02\xf5\x00\x00\x02\x1a', '__version__': 1}</properties>
		<properties node_id="6" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00?\x00\x00\x00\xd6\x00\x00\x026\x00\x00\x02\xe5\x00\x00\x00?\x00\x00\x00\xf2\x00\x00\x026\x00\x00\x02\xe5\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x00?\x00\x00\x00\xf2\x00\x00\x026\x00\x00\x02\xe5', 'select_rows': True, 'selected_cols': [0], 'selected_rows': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="7" format="pickle">gASVYAcAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIwuL2hvbWUvcGVkcm96YWQvRG9jdW1lbnRvcy9MaXN0YSBkZSBwcnVlYmEyLmNzdpSMBnBy
ZWZpeJROjAdyZWxwYXRolE6MBXRpdGxllIwAlIwFc2hlZXSUaA6MC2ZpbGVfZm9ybWF0lE51YmgG
KYGUfZQoaAmMZi9ob21lL3BlZHJvemFkL0VzY3JpdG9yaW8vRGVzYXJyb2xsby9PcmFuZ2UzL3Zl
bnYvbGliL3B5dGhvbjMuOS9zaXRlLXBhY2thZ2VzL09yYW5nZS9kYXRhc2V0cy9pcmlzLnRhYpRo
C4wPc2FtcGxlLWRhdGFzZXRzlGgMjAhpcmlzLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9lChoCYxp
L2hvbWUvcGVkcm96YWQvRXNjcml0b3Jpby9EZXNhcnJvbGxvL09yYW5nZTMvdmVudi9saWIvcHl0
aG9uMy45L3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL3RpdGFuaWMudGFilGgLaBRoDIwL
dGl0YW5pYy50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMaS9ob21lL3BlZHJvemFkL0VzY3Jp
dG9yaW8vRGVzYXJyb2xsby9PcmFuZ2UzL3ZlbnYvbGliL3B5dGhvbjMuOS9zaXRlLXBhY2thZ2Vz
L09yYW5nZS9kYXRhc2V0cy9ob3VzaW5nLnRhYpRoC2gUaAyMC2hvdXNpbmcudGFilGgNaA5oD2gO
aBBOdWJoBimBlH2UKGgJjG8vaG9tZS9wZWRyb3phZC9Fc2NyaXRvcmlvL0Rlc2Fycm9sbG8vT3Jh
bmdlMy92ZW52L2xpYi9weXRob24zLjkvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMvaGVh
cnRfZGlzZWFzZS50YWKUaAtoFGgMjBFoZWFydF9kaXNlYXNlLnRhYpRoDWgOaA9oDmgQTnViaAYp
gZR9lChoCYxwL2hvbWUvcGVkcm96YWQvRXNjcml0b3Jpby9EZXNhcnJvbGxvL09yYW5nZTMvdmVu
di9saWIvcHl0aG9uMy45L3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2Jyb3duLXNlbGVj
dGVkLnRhYpRoC2gUaAyMEmJyb3duLXNlbGVjdGVkLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9lCho
CYxlL2hvbWUvcGVkcm96YWQvRXNjcml0b3Jpby9EZXNhcnJvbGxvL09yYW5nZTMvdmVudi9saWIv
cHl0aG9uMy45L3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL3pvby50YWKUaAtoFGgMjAd6
b28udGFilGgNaA5oD2gOaBBOdWJljAtyZWNlbnRfdXJsc5RdlIwTc2F2ZWRXaWRnZXRHZW9tZXRy
eZRDQgHZ0MsAAwAAAAACCQAAAH0AAARgAAAC6wAAAgkAAACZAAAEYAAAAusAAAAAAAAAAAZAAAAC
CQAAAJkAAARgAAAC65SMC3NoZWV0X25hbWVzlH2UjAZzb3VyY2WUSwCMA3VybJRoDowNZG9tYWlu
X2VkaXRvcpR9lIwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3
aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojAl2YXJpYWJsZXOU
XZRoMn2UaD5dlF2UKIwJRmVhdHVyZSAxlIwUT3JhbmdlLmRhdGEudmFyaWFibGWUjBJDb250aW51
b3VzVmFyaWFibGWUk5RLAGgOiGVhc2g0SwF1jAphdHRyaWJ1dGVzlGhDSwKGlIWUjAVtZXRhc5Qp
jApjbGFzc192YXJzlCmMEm1vZGlmaWVkX3ZhcmlhYmxlc5RdlHViaDkpgZR9lChoPH2UKGg+XZRo
Mn2UaD5dlChdlCiMDHNlcGFsIGxlbmd0aJRoRksAaA6IZV2UKIwLc2VwYWwgd2lkdGiUaEZLAGgO
iGVdlCiMDHBldGFsIGxlbmd0aJRoRksAaA6IZV2UKIwLcGV0YWwgd2lkdGiUaEZLAGgOiGVdlCiM
BGlyaXOUaESMEERpc2NyZXRlVmFyaWFibGWUk5RLAYwsSXJpcy1zZXRvc2EsIElyaXMtdmVyc2lj
b2xvciwgSXJpcy12aXJnaW5pY2GUiWVlc2g0SwF1aEcoaFVLAoaUaFdLAoaUaFlLAoaUaFtLAoaU
dJRoSiloS2hdXZQojAtJcmlzLXNldG9zYZSMD0lyaXMtdmVyc2ljb2xvcpSMDklyaXMtdmlyZ2lu
aWNhlGWGlIWUaExdlHViZXUu
</properties>
		<properties node_id="8" format="literal">{'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00?\x00\x00\x01/\x00\x00\x06\x0f\x00\x00\x02v\x00\x00\x00?\x00\x00\x01K\x00\x00\x06\x0f\x00\x00\x02v\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x00?\x00\x00\x01K\x00\x00\x06\x0f\x00\x00\x02v', '__version__': 1}</properties>
		<properties node_id="9" format="literal">{'controlAreaVisible': True, 'number': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xd1\x00\x00\x01\xcb\x00\x00\x03\x98\x00\x00\x02|\x00\x00\x02\xd1\x00\x00\x01\xe7\x00\x00\x03\x98\x00\x00\x02|\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x02\xd1\x00\x00\x01\xe7\x00\x00\x03\x98\x00\x00\x02|', '__version__': 1}</properties>
		<properties node_id="10" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01^\x00\x00\x00\xb2\x00\x00\x05\x0b\x00\x00\x03%\x00\x00\x01^\x00\x00\x00\xce\x00\x00\x05\x0b\x00\x00\x03%\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x01^\x00\x00\x00\xce\x00\x00\x05\x0b\x00\x00\x03%', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndomain = Domain([ContinuousVariable("age"),\n                 ContinuousVariable("height"),\n                 DiscreteVariable("gender", values=("M", "F"))])\narr = np.array([\n  [25, 186, 0],\n  [30, 164, 1]])\nout_data = Table.from_numpy(domain, arr)\n', 'filename': None}, {'name': 'customProblemSTemp.py', 'script': "import math\nimport random\n\nfrom jmetal.core.problem import BinaryProblem, FloatProblem\nfrom jmetal.core.solution import BinarySolution, FloatSolution\n\nclass CustomProblem(BinaryProblem):\n\n    def __init__(self, number_of_bits: int = 256):\n        super(CustomProblem, self).__init__()\n        self.number_of_bits = number_of_bits\n        self.number_of_objectives = 1\n        self.number_of_variables = 1\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE]\n        self.obj_labels = ['Ones']\n\n    def evaluate(self, solution: BinarySolution) -&gt; BinarySolution:\n        counter_of_ones = 0\n        for bits in solution.variables[0]:\n            if bits:\n                counter_of_ones += 1\n\n        solution.objectives[0] = -1.0 * counter_of_ones\n\n        return solution\n\n    def create_solution(self) -&gt; BinarySolution:\n        new_solution = BinarySolution(number_of_variables=1, number_of_objectives=1)\n        new_solution.variables[0] = \\\n            [True if random.randint(0, 1) == 0 else False for _ in range(self.number_of_bits)]\n        return new_solution\n\n    def get_name(self) -&gt; str:\n        return 'CustomProblem'\n\n\n", 'filename': '/home/pedrozad/Documentos/customProblemSTemp.py'}, {'name': 'New script', 'script': "import math\nimport random\n\nfrom jmetal.core.problem import BinaryProblem, FloatProblem\nfrom jmetal.core.solution import BinarySolution, FloatSolution\n\nclass CustomProblem(BinaryProblem):\n\n    def __init__(self, number_of_bits: int = 256):\n        super(CustomProblem, self).__init__()\n        self.number_of_bits = number_of_bits\n        self.number_of_objectives = 1\n        self.number_of_variables = 1\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE]\n        self.obj_labels = ['Ones']\n\n    def evaluate(self, solution: BinarySolution) -&gt; BinarySolution:\n        counter_of_ones = 0\n        for bits in solution.variables[0]:\n            if bits:\n                counter_of_ones += 1\n\n        solution.objectives[0] = -1.0 * counter_of_ones\n\n        return solution\n\n    def create_solution(self) -&gt; BinarySolution:\n        new_solution = BinarySolution(number_of_variables=1, number_of_objectives=1)\n        new_solution.variables[0] = \\\n            [True if random.randint(0, 1) == 0 else False for _ in range(self.number_of_bits)]\n        return new_solution\n\n    def get_name(self) -&gt; str:\n        return 'CustomProblem'\n#\n# Don not modify above this line\n#\nout_problem = CustomProblem(15)\n\n\n\n", 'filename': None}, {'name': 'customProblemSTemp.py', 'script': "import math\nimport random\n\nfrom jmetal.core.problem import BinaryProblem, FloatProblem\nfrom jmetal.core.solution import BinarySolution, FloatSolution\n\nclass CustomProblem(BinaryProblem):\n\n    def __init__(self, number_of_bits: int = 256):\n        super(CustomProblem, self).__init__()\n        self.number_of_bits = number_of_bits\n        self.number_of_objectives = 1\n        self.number_of_variables = 1\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE]\n        self.obj_labels = ['Ones']\n\n    def evaluate(self, solution: BinarySolution) -&gt; BinarySolution:\n        counter_of_ones = 0\n        for bits in solution.variables[0]:\n            if bits:\n                counter_of_ones += 1\n\n        solution.objectives[0] = -1.0 * counter_of_ones\n\n        return solution\n\n    def create_solution(self) -&gt; BinarySolution:\n        new_solution = BinarySolution(number_of_variables=1, number_of_objectives=1)\n        new_solution.variables[0] = \\\n            [True if random.randint(0, 1) == 0 else False for _ in range(self.number_of_bits)]\n        return new_solution\n\n    def get_name(self) -&gt; str:\n        return 'CustomProblem'\n#\n# Don not modify above this line\n#\nout_problem = CustomProblem()\n", 'filename': '/home/pedrozad/Documentos/customProblemSTemp.py'}], 'scriptText': "import math\nimport random\n\nfrom jmetal.core.problem import BinaryProblem, FloatProblem\nfrom jmetal.core.solution import BinarySolution, FloatSolution\n\nclass CustomProblem(BinaryProblem):\n\n    def __init__(self, number_of_bits: int = 256):\n        super(CustomProblem, self).__init__()\n        self.number_of_bits = number_of_bits\n        self.number_of_objectives = 1\n        self.number_of_variables = 1\n        self.number_of_constraints = 0\n\n        self.obj_directions = [self.MINIMIZE]\n        self.obj_labels = ['Ones']\n\n    def evaluate(self, solution: BinarySolution) -&gt; BinarySolution:\n        counter_of_ones = 0\n        for bits in solution.variables[0]:\n            if bits:\n                counter_of_ones += 1\n\n        solution.objectives[0] = -1.0 * counter_of_ones\n\n        return solution\n\n    def create_solution(self) -&gt; BinarySolution:\n        new_solution = BinarySolution(number_of_variables=1, number_of_objectives=1)\n        new_solution.variables[0] = \\\n            [True if random.randint(0, 1) == 0 else False for _ in range(self.number_of_bits)]\n        return new_solution\n\n    def get_name(self) -&gt; str:\n        return 'CustomProblem'\n#\n# Don not modify above this line\n#\nout_problem = CustomProblem()\n", 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00h\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="11" format="literal">{'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xed\x00\x00\x02\xb8\x00\x00\x03\xc0\x00\x00\x03i\x00\x00\x02\xed\x00\x00\x02\xd4\x00\x00\x03\xc0\x00\x00\x03i\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x02\xed\x00\x00\x02\xd4\x00\x00\x03\xc0\x00\x00\x03i', '__version__': 1}</properties>
		<properties node_id="12" format="literal">{'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xd0\x00\x00\x01[\x00\x00\x03\x9a\x00\x00\x02\x0c\x00\x00\x02\xd0\x00\x00\x01w\x00\x00\x03\x9a\x00\x00\x02\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x06@\x00\x00\x02\xd0\x00\x00\x01w\x00\x00\x03\x9a\x00\x00\x02\x0c', '__version__': 1}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
